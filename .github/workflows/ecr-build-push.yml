name: Build and Push Docker Image to ECR

on:
  push:
    branches: [ master ]
    paths:
      - 'Dockerfile'
      - '**/*.java'
      - 'pom.xml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create ECR repo if not exists
        run: |
          aws ecr describe-repositories --repository-names cloudbasedproject-repo || \
          aws ecr create-repository --repository-name cloudbasedproject-repo

      - name: Build Spring Boot App
        run: mvn clean package -DskipTests

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Tag Docker image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_TAG=latest
          ECR_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/cloudbasedproject-repo
          docker build -t $ECR_URI:$IMAGE_TAG .
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: Push image to ECR
        run: |
          docker push $ECR_URI:latest

      - name: Save imagedefinitions.json
        run: |
          echo '[{"name":"springboot-container","imageUri":"'"$ECR_URI"':latest"}]' > imagedefinitions.json

      - name: Upload imagedefinitions.json
        uses: actions/upload-artifact@v4
        with:
          name: image-defs
          path: imagedefinitions.json
